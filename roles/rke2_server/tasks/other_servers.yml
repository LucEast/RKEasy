---
- name: Does config file already have server token? # noqa command-instead-of-shell
  ansible.builtin.command: 'grep -i "^token: \"[^\"]\+\"" /etc/rancher/rke2/config.yaml'
  register: server_token_check
  failed_when: server_token_check.rc >= 2
  changed_when: false

- name: Add token to config.yaml
  ansible.builtin.lineinfile:
    dest: /etc/rancher/rke2/config.yaml
    line: "token: {{ rke2_token }}"
    state: present
    insertbefore: BOF
  vars:
    rke2_token: "{{ {{ hostvars[groups['K8s_ControlPlanes'][0]].token if 'K8s_ControlPlanes' in groups and hostvars[groups['K8s_ControlPlanes'][0]].first_node | default(false) else token }} }}"
  when:
    - "'token:' not in server_token_check.stdout or server_token_check.stdout == 'token: \"\"'"
    - not ansible_check_mode

- name: Does config file already have server url? # noqa command-instead-of-shell
  ansible.builtin.command: 'grep -i "^server: \"[^\"]\+\"" /etc/rancher/rke2/config.yaml'
  register: server_url_check
  failed_when: server_url_check.rc >= 2
  changed_when: false

- name: Add server url to config file
  ansible.builtin.lineinfile:
    dest: /etc/rancher/rke2/config.yaml
    line: "server: https://{{ kubernetes_api_server_host }}:9345"
    state: present
    insertbefore: BOF
  when:
    - '"server:" not in server_url_check.stdout or server_url_check.stdout == "server: \"\""'
    - not ansible_check_mode

- name: Start rke2-server
  throttle: 1
  ansible.builtin.systemd:
    name: rke2-server
    state: started
    enabled: yes

# - name: Wait for k8s apiserver reachability
#   ansible.builtin.wait_for:
#     host: "{{ kubernetes_api_server_host }}"
#     port: "6443"
#     state: present
#     timeout: 300
#   register: reachability

# - name: Debug reachability
#   ansible.builtin.debug:
#     var: reachability

- name: Wait for k8s apiserver reachability using uri
  uri:
    url: https://{{ kubernetes_api_server_host }}:6443/healthz
    method: GET
    validate_certs: false
    client_cert: /var/lib/rancher/rke2/server/tls/client-admin.crt
    client_key: /var/lib/rancher/rke2/server/tls/client-admin.key
  register: result
  retries: 10
  delay: 30
  until: result.status == 200 and result.msg.startswith('OK')
  failed_when: result.status != 200
  when: not ansible_check_mode

- name: Debug result
  ansible.builtin.debug:
    var: result

- name: Wait for kubelet process to be present on host
  ansible.builtin.command: >-
    ps -C kubelet -F -ww --no-headers
  register: kubelet_check
  until: kubelet_check.rc == 0
  retries: 20
  delay: 10
  changed_when: false

- name: Extract the hostname-override parameter from the kubelet process
  ansible.builtin.set_fact:
    kubelet_hostname_override_parameter: "{{ kubelet_check.stdout | \
      regex_search('\\s--hostname-override=((([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]))\\s',\
      '\\1') }}"

- name: Wait for node to show Ready status
  ansible.builtin.command: >-
    /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml
    --server https://127.0.0.1:6443 get no {{ kubelet_hostname_override_parameter[0] }}
    -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
  register: status_result
  until: status_result.stdout.find("True") != -1
  retries: 20
  delay: 10
  changed_when: false
  when: not ansible_check_mode
