---
- name: Add manifest files
  ansible.builtin.include_role:
    name: rke2_common
    tasks_from: add-manifest-addons.yml
  when:
    - manifest_config_file_path is defined
    - manifest_config_file_path | length > 0

- name: Start rke2-server
  ansible.builtin.systemd:
    name: rke2-server
    state: started
    enabled: yes

- name: Wait for k8s apiserver
  ansible.builtin.wait_for:
    host: localhost
    port: "6443"
    state: present
    timeout: 300

- name: Wait for kubelet process to be present on host
  ansible.builtin.command: >-
    ps -C kubelet -F -ww --no-headers
  register: kubelet_check
  until: kubelet_check.rc == 0
  retries: 20
  delay: 10
  changed_when: false

- name: Extract the hostname-override parameter from the kubelet process
  ansible.builtin.set_fact:
    kubelet_hostname_override_parameter: "{{ kubelet_check.stdout | \
      regex_search('\\s--hostname-override=((([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]))\\s',\
      '\\1') }}"

- name: Wait for node to show Ready status
  ansible.builtin.command: >-
    /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml
    --server https://127.0.0.1:6443 get no {{ kubelet_hostname_override_parameter[0] }}
    -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}'
  register: status_result
  until: status_result.stdout.find("True") != -1
  retries: 20
  delay: 10
  changed_when: false
  when: not ansible_check_mode

- name: Add generated Token if none provided
  block:
    - name: Wait for node-token
      ansible.builtin.wait_for:
        path: /var/lib/rancher/rke2/server/node-token

    - name: Read node-token from master
      ansible.builtin.slurp:
        src: /var/lib/rancher/rke2/server/node-token
      register: node_token

    - name: Store Master node-token
      ansible.builtin.set_fact:
        rke2_config_token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

    - name: Output rke2_config_token to CLI
      ansible.builtin.debug:
        msg: "RKE2 Config Token: {{ rke2_config_token }}"

    # - name: Debug inventory_dir
    #   ansible.builtin.debug:
    #     var: inventory_dir

    - name: Write rke2_config_token to "{{ inventory_dir }}"/rke2_token.txt on local machine
      local_action:
        module: copy
        content: "{{ rke2_config_token }}"
        dest: "{{ inventory_dir }}/rke2_token.txt"

    - name: Store Master node-token in hostvars
      ansible.builtin.set_fact:
        token: "{{ rke2_config_token }}"
        rke2_token_created: true

    - name: Read kubeconfig
      ansible.builtin.command: >-
        /var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml
        --server https://127.0.0.1:6443 config view --flatten
      register: kubeconfig

    - name: Store kubeconfig in fact
      ansible.builtin.set_fact:
        kubeconfig_content: "{{ kubeconfig.stdout }}"

    - name: Output kubeconfig to CLI
      ansible.builtin.debug:
        msg: "Kubeconfig: {{ kubeconfig_content }}"

    - name: Write kubeconfig to "{{ inventory_dir }}"/kubeconfig on local machine
      local_action:
        module: copy
        content: "{{ kubeconfig_content }}"
        dest: "{{ inventory_dir }}/kubeconfig"
      when: kubeconfig_content is not none and kubeconfig_content != "" # Nur, wenn die Kubeconfig erfolgreich gelesen wurde
